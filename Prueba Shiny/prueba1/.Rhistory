runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
View(data7)
shiny::runApp('prueba_margaret')
runApp('prueba_margaret')
paises_general <- articulos_unicos_2016_2020 |>
count(pais_revista, sort = TRUE)
paises_general$porcentaje <- round(prop.table(paises$n),3)*100
View(paises_general)
paises_general <- articulos_unicos_2016_2020 |>
count(pais_revista, sort = TRUE)
paises_general$porcentaje <- round(prop.table(paises$n),3)*100
View(paises_general)
paises_general <- articulos_unicos_2016_2020 |>
count(pais_revista, sort = TRUE)
paises_general$porcentaje <- round(prop.table(paises_general$n),3)*100
paises_general |>
mutate(porcentaje = str_c(porcentaje," %"),
pais_revista = if_else(is.na(pais_revista), "No registra", pais_revista))
runApp('prueba_margaret')
paises_general |>
mutate(porcentaje = str_c(porcentaje," %"),
pais_revista = if_else(is.na(pais_revista), "No registra", pais_revista))
View(paises_general)
rm(paises)
view(paises_general)
paises_general <- paises_general |>
mutate(porcentaje = str_c(porcentaje," %"),
pais_revista = if_else(is.na(pais_revista), "No registra", pais_revista))
View(paises_general)
runApp('prueba_margaret')
runApp('prueba_margaret')
View(investigadores_general)
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
View(grupos_general)
grupos_general <-
read_csv(here("output",
"general_grupos.csv")) |>
select(grupo, clasificacion, cantidad_articulos, departamento , url,
fecha_creacion,lider, email, area_conocimiento_1) |>
mutate(url= str_c("<a href=",
url,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Clasificación", "Cantidad artículos",
"Departamento","GrupLAC",
"Fecha Creación", "Líder", "Email",
"Área de Conocimiento"))
grupos_general <-
read_csv(here("output",
"grupos_general.csv")) |>
select(grupo, clasificacion, sum_papers, departamento , url,
fecha_creacion,lider, email, area_conocimiento_1) |>
mutate(url= str_c("<a href=",
url,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Clasificación", "Cantidad artículos",
"Departamento","GrupLAC",
"Fecha Creación", "Líder", "Email",
"Área de Conocimiento"))
View(grupos_general)
View(grupos_general)
grupos_general <-
read_csv(here("output",
"grupos_general.csv")) |>
select(grupo, clasificacion, sum_papers, departamento , url,
fecha_creacion,lider, email, area_conocimiento_1) |>
mutate(url= str_c("<a href=",
url,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Clasificación", "Cantidad artículos",
"Departamento","GrupLAC",
"Fecha Creación", "Líder", "Email",
"Área de Conocimiento"))
View(grupos_general)
grupos_general <-
read_csv(here("output",
"grupos_general.csv"))
View(grupos_general)
grupos_general <-
read_csv(here("output",
"grupos_general.csv")) |>
select(grupo, clasificacion, sum_papers, departamento , url,
fecha_creacion,lider, email, area_conocimiento_1) |>
mutate(url= str_c("<a href=",
url,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Clasificación", "Cantidad artículos",
"Departamento","GrupLAC",
"Fecha Creación", "Líder", "Email",
"Área de Conocimiento"))
runApp('prueba_margaret')
View(investigadores_general)
grupos_general <-
read_csv(here("output",
"grupos_general.csv")) |>
select(grupo, clasificacion, sum_papers, departamento , url,
fecha_creacion,lider, email, area_conocimiento_1) |>
mutate(url= str_c("<a href=",
url,
">Link</a>")) |>
colnames = c("Grupo", "Clasificación", "Cantidad artículos",
"Departamento","GrupLAC",
"Fecha Creación", "Líder", "Email",
"Área de Conocimiento")
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
#revistas
nombres <- articulos_unicos_2016_2020 |>
select(ISSN, revista) |>
unique()
cantidad <- articulos_unicos_2016_2020 |>
select(ISSN) |> count(ISSN, sort=TRUE)
national_2021 <- read_csv("https://docs.google.com/spreadsheets/d/1ALPh_lgq6OtxgbKXRUEFEmoWcY37gfsnyTszFXbHvWw/export?format=csv&gid=758989915") |>
unite(ISSN, c("issn_impreso","issn_electronico", "issn_l"), sep = ",", remove = TRUE) |>
mutate(ano = "2021") |>
select(-VIGENCIA) |>
separate_rows(ISSN, sep = ",") |>
filter(!str_detect(ISSN, "NA")) |>
rename(revista = 1) |>
select(1,2,4,3)
international_j_2021 <- read_csv(here("output",
"international_journals_2021.csv")) |>
separate_rows(ISSN, sep = "; ") |>
mutate(ano = as.character(ano))
international <- left_join(cantidad,international_j_2021)
national <- left_join(cantidad, national_2021)
revistas <- left_join(national, international, by = "ISSN")|>
mutate(revista.x = ifelse(is.na(revista.x),revista.y,revista.x),
categoria.x = ifelse(is.na(categoria.x),categoria.y,categoria.x)) |>
select(3,1,4,2) |>
rename(revista = 1,
ISSN = 2,
categoria = 3,
cantidad = 4) |>
left_join(nombres, by = "ISSN") |>
mutate(revista.x = ifelse(is.na(revista.x),revista.y,revista.x),
revista.x = str_to_upper(revista.x),
categoria = ifelse(is.na(categoria),"Sin clasificación en 2021",categoria)) |>
rename(revista = 1) |>
select(-5) |>
unique()
revistas <- revistas[order(revistas$cantidad, decreasing = TRUE), ]
revistas$porcentaje <- round(prop.table(revistas$cantidad),3)*100
revistas |>
mutate(porcentaje = str_c(porcentaje," %")) |>
datatable(options = list(pageLength = 20),
colnames = c('Revista', 'ISSN', 'Categoría','Cantidad', 'Porcentaje'))
View(national_2021)
View(national)
View(nombres)
revistas <- revistas[order(revistas$cantidad, decreasing = TRUE), ]
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo producto",
"Título", "País revista", "Revista",
"ISSN","Casiflicación Revista", "Año", "Volumen",
"Fasc","Paginas", "Enlace artículo", "Autores"))
View(articulos_unicos_2016_2020)
capitulos_2016_2020 <-
read_csv(here("output",
"capitulos.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-vol, -tipo_producto) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título capitulo", "País", "Año",
"Titulo libro","ISBN", "Paginas", "Editorial",
"Autores"))
libros_2016_2020 <-
read_csv(here("output",
"libros.csv")) |>
filter(Ano >= 2016,
Ano <=2020) |>
select(-Tipo_producto) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título libro", "País", "Año",
"ISBN","Editorial", "Autores"))
software_2016_2020 <-
read_csv(here("output",
"softwares.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-nombre_proyecto, -tipo_producto) |>
mutate(sitio_web= str_c("<a href=",
sitio_web,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título", "País", "Año",
"Disponibilidad","Sitio web", "Nombre comercial", "Institución financiadora",
"Autores"))
trabajo_2016_2020 <-
read_csv(here("output",
"trabajos_dirigidos.csv")) |>
mutate(hasta = str_remove(hasta, ".* "),
hasta = str_trim(hasta),
desde = str_remove(desde, "\\d.* "),
desde = str_trim(desde)) |>
filter(desde >= 2016,
hasta <=2020)
innovacion_2016_2020 <-
read_csv(here("output",
"innovaciones_gestion.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo Producto",
"Título", "país", "Año",
"Disponibilidad","Institución financiadora", "Autores"))
runApp('prueba_margaret')
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo producto",
"Título", "País revista", "Revista",
"ISSN","Casiflicación Revista", "Año", "Volumen",
"Fasc","Paginas", "Enlace artículo", "Autores"))
View(articulos_unicos_2016_2020)
capitulos_2016_2020 <-
read_csv(here("output",
"capitulos.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-vol, -tipo_producto) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título capitulo", "País", "Año",
"Titulo libro","ISBN", "Paginas", "Editorial",
"Autores"))
libros_2016_2020 <-
read_csv(here("output",
"libros.csv")) |>
filter(Ano >= 2016,
Ano <=2020) |>
select(-Tipo_producto) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título libro", "País", "Año",
"ISBN","Editorial", "Autores"))
software_2016_2020 <-
read_csv(here("output",
"softwares.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
select(-nombre_proyecto, -tipo_producto) |>
mutate(sitio_web= str_c("<a href=",
sitio_web,
">Link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría",
"Título", "País", "Año",
"Disponibilidad","Sitio web", "Nombre comercial", "Institución financiadora",
"Autores"))
trabajo_2016_2020 <-
read_csv(here("output",
"trabajos_dirigidos.csv")) |>
mutate(hasta = str_remove(hasta, ".* "),
hasta = str_trim(hasta),
desde = str_remove(desde, "\\d.* "),
desde = str_trim(desde)) |>
filter(desde >= 2016,
hasta <=2020)
innovacion_2016_2020 <-
read_csv(here("output",
"innovaciones_gestion.csv")) |>
filter(ano >= 2016,
ano <=2020) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo Producto",
"Título", "país", "Año",
"Disponibilidad","Institución financiadora", "Autores"))
tabPanel("Producción científica",
tabsetPanel(type = "tabs",
tabPanel("Articulos", fluidPage((DT::dataTableOutput('articulo'))
),),
tabPanel("Capítulos", fluidPage((DT::dataTableOutput('capitulo'))
),),
tabPanel("Libros", fluidPage((DT::dataTableOutput('libro'))
),),
tabPanel("Software", fluidPage((DT::dataTableOutput('software'))
),),
tabPanel("Innovaciones", fluidPage((DT::dataTableOutput('innovaciones'))
),),
tabPanel("Trabajos dirigidos/tutorías", fluidPage((DT::dataTableOutput('trabajosd'))
),),)
),
ui <- fluidPage(theme = shinytheme("readable"),
navbarPage(
"Margaret",
tabPanel("General",
tabsetPanel(type = "tabs",
tabPanel("Grupos", fluidPage((DT::dataTableOutput('ex1'))
),),
tabPanel("Investigadores", fluidPage((selectInput("grupos", "Grupos:",
c(grupos$grupo)))
),(DT::dataTableOutput('ex2')),
),
tabPanel("Paises", fluidPage((DT::dataTableOutput('ex3'))
),
),
tabPanel("Revistas", fluidPage("Revistas"))),
),
tabPanel("Producción científica",
tabsetPanel(type = "tabs",
tabPanel("Articulos", fluidPage((DT::dataTableOutput('articulo'))
),),
tabPanel("Capítulos", fluidPage((DT::dataTableOutput('capitulo'))
),),
tabPanel("Libros", fluidPage((DT::dataTableOutput('libro'))
),),
tabPanel("Software", fluidPage((DT::dataTableOutput('software'))
),),
tabPanel("Innovaciones", fluidPage((DT::dataTableOutput('innovaciones'))
),),
tabPanel("Trabajos dirigidos/tutorías", fluidPage((DT::dataTableOutput('trabajosd'))
),),)
),
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
paises_general <- articulos_unicos_2016_2020 |>
count(pais_revista, sort = TRUE)
runApp('prueba_margaret')
articulos_2016_2020 <- articulos_unicos_2016_2020 |>
filter(ano >= 2016,
ano <=2020) |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo producto",
"Título", "País revista", "Revista",
"ISSN","Casiflicación Revista", "Año", "Volumen",
"Fasc","Paginas", "Enlace artículo", "Autores"))
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv"))
View(articulos_unicos_2016_2020)
articulos_2016_2020 <- articulos_unicos_2016_2020 |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo producto",
"Título", "País revista", "Revista",
"ISSN","Casiflicación Revista", "Año", "Volumen",
"Fasc","Paginas", "Enlace artículo", "Autores"))
View(articulos_2016_2020)
runApp('prueba_margaret')
runApp('prueba_margaret')
articulos_2016_2020 <- articulos_unicos_2016_2020 |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoría", "Tipo producto",
"Título", "País revista", "Revista",
"ISSN","Casiflicación Revista", "Año", "Volumen",
"Fasc","Paginas", "Enlace artículo", "Autores"))
View(articulos_2016_2020)
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv")) |>
filter(ano >= 2016,
ano <=2020)
View(articulos_unicos_2016_2020)
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
shiny::runApp('prueba_margaret')
shiny::runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
shiny::runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_2')
runApp('prueba_2')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
runApp('prueba_margaret')
